"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.jsonBodyMiddleware = exports.app = void 0;
const express_1 = __importDefault(require("express"));
const cookie_parser_1 = __importDefault(require("cookie-parser"));
const settings_1 = require("./settings");
const testsController_1 = require("./services/tests/testsController");
const globalRequestLimitMiddleware_1 = require("./shared/middlewares/globalRequestLimitMiddleware");
const usersRouts_1 = require("./services/users/usersRouts");
const authRouts_1 = require("./services/auth/authRouts");
const blogsRouts_1 = require("./services/blogs/blogsRouts");
const postsRouts_1 = require("./services/posts/postsRouts");
const commentsRouts_1 = require("./services/comments/commentsRouts");
const securityRouts_1 = require("./services/usersSessions/securityRouts");
exports.app = (0, express_1.default)();
exports.jsonBodyMiddleware = express_1.default.json();
exports.app.set('trust proxy', true);
exports.app.use(exports.jsonBodyMiddleware);
exports.app.use((0, cookie_parser_1.default)());
exports.app.use(globalRequestLimitMiddleware_1.globalRequestLimitMiddleware);
exports.app.get('/', (req, res) => { res.send('Hello Samurai'); });
exports.app.use(settings_1.SETTINGS.RouterPath.auth, authRouts_1.authRouter);
exports.app.use(settings_1.SETTINGS.RouterPath.users, usersRouts_1.usersRouter);
exports.app.use(settings_1.SETTINGS.RouterPath.blogs, blogsRouts_1.blogsRouter);
exports.app.use(settings_1.SETTINGS.RouterPath.posts, postsRouts_1.postRouter);
exports.app.use(settings_1.SETTINGS.RouterPath.comments, commentsRouts_1.commentsRouter);
exports.app.use(settings_1.SETTINGS.RouterPath.security, securityRouts_1.securityRouter);
exports.app.use(settings_1.SETTINGS.RouterPath.__test__, testsController_1.testsRouter);
